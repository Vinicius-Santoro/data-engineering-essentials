{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#objective","title":"Objective","text":"<p>Hello, nice to meet you, I'm Vinicius!</p> <p>Until the end of 2024, I worked in a business squad, focused on data analysis.  However, I discovered my interest in combining software engineering with data and I am starting my career as a data engineer!</p> <p>The purpose of this site is to document my learning process to become a data engineer.</p> <p>According to Microsoft Learn, a data engineer integrates, transforms, and consolidates data from multiple structured and unstructured data systems into structures suitable for creating analytics solutions.</p> <p>To achieve this goal, I am structuring my studies based on the following fundamental pillars:</p> <ul> <li>Cloud AWS.</li> <li>Big Data.</li> <li>Database.</li> <li>Schedule.</li> <li>Devops.</li> <li>Data architectures.</li> </ul>"},{"location":"#about-me","title":"About me","text":"<ul> <li>\ud83d\udcbb 2021: I discovered the training in Software Engineering at \u00c9cole 42.</li> <li>\ud83d\udcda 2022: I joined the Data Science course at FATEC.</li> <li>\ud83d\udcbc 2023: I joined Ita\u00fa Unibanco as an intern.</li> <li>\ud83c\udfaf 2024: I was hired as a Data Analyst.</li> <li>\ud83d\ude80 2025: I discovered my interest in combining software engineering and data and I am starting my career as a Data Engineer.</li> <li>\u270d\ufe0f I published two Ita\u00fa Tech articles:<ul> <li>The data journey at Ita\u00fa Unibanco: modeling and data engineering and analytics.</li> <li>The data journey at Ita\u00fa Unibanco: data science and machine learning engineering.</li> </ul> </li> <li>\ud83c\udf99\ufe0f I was invited to the Data Hackers podcast! I participated in episode ##88: Data Engineering and Analytics Journey at Ita\u00fa.</li> <li>\ud83c\udfc6 My team won the Ita\u00fa Unibanco Data Battle.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/","title":"Data Engineering Fundamentals","text":""},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#types-of-data","title":"Types of Data","text":""},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#structured","title":"Structured","text":"<ul> <li>Definition: Data that is organized in a defined manner or schema, typically found in relational databases.</li> <li>Characteristics: Easily queryable, organized in rows and columns and has a consistent structure</li> <li>Examples: Database tables, CSV files with consistent columns and Excel spreadsheets.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#unstructured-data","title":"Unstructured Data","text":"<ul> <li>Definition: Data that doesn't have a predefined structure or schema.</li> <li>Characteristics: Not easily queryable without preprocessing and may come in various formats</li> <li>Examples: Text files without a fixed format, videos and audio files, images and emails and word processing documents.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#semi-structured-data","title":"Semi-Structured Data","text":"<ul> <li>Definition: Data that is not as organized as structured data but has some level of structure in the form of tags, hierarchies or other patterns.</li> <li>Characteristics: Elements might be tagged or categorized in some way. More flexible than structured data but not as chaotic as unstructured data.</li> <li>Examples: XML and JSON files and log files with varied formats.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#big-data-5-vs","title":"Big Data 5 V`s","text":"<ul> <li>Volume: large amount of data to be stored and processed, with scales ranging from terabytes to zettabytes.</li> <li>Speed: large amount of data generated, generally, in a short space of time.</li> <li>Variety: great variety of data, because, within the large volume of data, we have different types, such as structured data, stored in databases, sequenced in tables, etc. Semi-structured data has heterogeneous patterns. Unstructured data which is, for example, images and audio.</li> <li>Veracity: data that matches the reality of the moment. Past data cannot be considered true at the time it is analyzed.</li> <li>Value: the richer the data, the more important it is to know how to ask the right questions at the beginning of the analysis process.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#data-warehouse","title":"Data Warehouse","text":"<ul> <li>Definition: A centralized repository optimized for analysis where data from different sources is stored in a structured format.</li> <li>Characteristics:<ul> <li>Designed for complex queries and analysis.</li> <li>Data is cleaned, transformed, and loaded (ETL process).</li> <li>Typically uses a star or snowflake schema.</li> <li>Optimized for read-heavy operations</li> </ul> </li> <li>Examples: Amazon Redshift, Google BigQuery and Microsoft Azure SQL Data Warehouse.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#data-lake","title":"Data Lake","text":"<ul> <li>Definition: A storage repository that holds vast amounts of raw data in its native format, including structured, semi-structured and unstructured data.</li> <li>Characteristics:<ul> <li>Can store large volumes of raw data without predefined schema.</li> <li>Data is loaded as-is, no need for preprocessing.</li> <li>Supports batch, real-time, and stream processing.</li> <li>Can be queried for data transformation or exploration purposes</li> </ul> </li> <li>Examples: Amazon s3 when usend as data lake, Azure Data Lake Storage and HDFS.</li> </ul>"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#comparing-the-two","title":"Comparing the two","text":"Comparing Data Warehouse Data Lake Schema Schema-on-write: predefined schema before writing data (ETL) Schema-on-read: schema is defined at the time of reading data (ELT) Data Types Primarily structured data Structured and unstructured data Agility Less agile due to predefined schema More agile as it accepts raw data without a predefined structure Processing ETL (Extract, Transform, Load) (Extract, Load, Transform) or just Load for storage purposes Cost Typically more expensive because of optimizations for complex queries Cost-effective storage solutions, but costs can rise when processing large amounts of data"},{"location":"AWS%20Data%20Engineer%20Associate/00-data-engineering-fundamentals/#choosing-a-warehouse-vs-a-lake","title":"Choosing a Warehouse vs. a Lake","text":"<p>Use a Data Warehouse when:</p> <ul> <li>You have structured data sources and require fast and complex queries.</li> <li>Data integration from different sources is essential.</li> <li>Business intelligence and analytics are the primary use cases.</li> </ul> <p>Use a Data Lake when:</p> <ul> <li>You have a mix of structured, semi-structured, or unstructured data.</li> <li>You need a scalable and cost-effective solution to store massive amounts of data.</li> <li>Future needs for data are uncertain, and you want flexibility in storage and processing.</li> <li>Advanced analytics, machine learning, or data discovery are key goals.</li> </ul> <p>Note</p> <p>Often, organizations use a combination of both, ingesting raw data into a data lake and then processing and moving refined data into a data warehouse for analysis.</p>"}]}